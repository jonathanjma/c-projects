###### SETUP - do not delete
lui x1, 0x0172f
addi x1, x1, 0x082
sw x1, 0(x0)
lui x1, 0x44200
sw x1, 4(x0)
addi x1, x0, 0x244
sw x1, 8(x0)

####### GCD(a, b)

####### load A and B

lw x2, 0(x0) # load A from memory

addi x5, x0, 8 # shift amount
lb x3, 9(x0) # load MSB of B

lb x6, 8(x0) # load next byte of B into temp register
sll x3, x3, x5 # shift previous bytes over by 1 byte
add x3, x3, x6 # add byte to B's register

lb x6, 7(x0) # load next byte of B into temp register
sll x3, x3, x5
add x3, x3, x6

lb x6, 6(x0) # load next byte of B into temp register
sll x3, x3, x5
add x3, x3, x6

####### check loop condition

addi x7, x0, 1 # used to implement comparison x <= 0 and for BEQ comparison

# LOOP:
slt x8, x2, x7 # 1 if A < 1 else 0
beq x8, x7, 52 # exit loop if A <= 0

slt x8, x3, x7 
beq x8, x7, 44 # exit loop if B <= 0

####### check if condition

addi x9, x2, 1 # store A + 1
slt x10, x3, x9 # 1 if B < A+1 else 0
beq x10, x7, 16 # skip swap

####### swap

addi x11, x2, 0 # copy A to temp register (A_temp)
addi x2, x3, 0 # set A = B
addi x3, x11, 0 # set B = A_temp

####### after if statement

# AFTERIF:
sub x4, x2, x3 # C = A - B
addi x2, x3, 0 # set A = B
addi x3, x4, 0 # set B = C

beq x0, x0, -52 # check loop condition

# DONE:
addi x1, x2, 0 # copy GCD to register x1

# verify memory
lw x12,0(x0)
lw x13,4(x0)
lw x14,8(x0)